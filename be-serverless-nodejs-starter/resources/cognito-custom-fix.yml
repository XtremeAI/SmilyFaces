# lambda to create map datatypes with dynamic keys #
# input format:                   output format:
#   AttributeName: MyKey      ->    { 
#   Entries:                          "MyKey": {
#     - Key: Key1                       "Key1": <value1>
#       Value: <value1>                 "Key2": <value2>
#     - Key: Key2                     }
#       Value: <value2>             }
#
#  to retrieve just the map object, use: !GetAtt ResourceName.MyKey
Resources:
  CognitoRoleMappingTransformer:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          var response = require('cfn-response');
          exports.handler = function(event, context) {
            let resourceProperties = event.ResourceProperties;
            let responseData = {
              RoleMapping: {
                [resourceProperties.IdentityProvider]: {
                  Type: resourceProperties.Type
                },
              },
            };
            if (resourceProperties.AmbiguousRoleResolution) {
              responseData.RoleMapping[resourceProperties.IdentityProvider].AmbiguousRoleResolution = resourceProperties.AmbiguousRoleResolution;
            }
            if (resourceProperties.RulesConfiguration) {
              responseData.RoleMapping[resourceProperties.IdentityProvider].RulesConfiguration = resourceProperties.RulesConfiguration;
            }
            response.send(event, context, response.SUCCESS, responseData);
          };
          
      Handler: index.handler
      Role: 
        Fn::GetAtt: [LambdaExecutionRole, Arn]
      Runtime: nodejs6.10
      Timeout: 30

  # IAM role used for authenticated users
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 
                - 'lambda.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: 'root'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: 'arn:aws:logs:*:*:*'

# Print out the Id of the Identity Pool that is created
Outputs:
  TransformedRoleMapping:
    Value:
      Fn::GetAtt: [CognitoRoleMappingTransformer, Arn]